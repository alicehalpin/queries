------------------------------------------------------------------------------------------------------------------------
-- ACTIVES BY YEAR
------------------------------------------------------------------------------------------------------------------------

SELECT
  'Yearly Actives (#)' as metric
, DATE_TRUNC('year',current_end_ts)::Date as activity_year
, COUNT(DISTINCT driver_id) as active_guests
, COUNT(DISTINCT vehicle_id) as active_vehicles
, COUNT(DISTINCT owner_id) as active_hosts

FROM analytics.reservation_summary rs
WHERE 1=1
    AND current_status NOT IN (2,11)
    AND trip_end_ts IS NOT NULL
    AND (DATE_TRUNC('year',current_end_ts) >= '2012-01-01'
        AND DATE_TRUNC('year',current_end_ts) < DATE_TRUNC('year',CURRENT_DATE)) -- Only last complete months
GROUP BY 1,2
ORDER BY 1,2;


------------------------------------------------------------------------------------------------------------------------
-- ACTIVES BY MONTH: Trailing 12-months Query
------------------------------------------------------------------------------------------------------------------------

SELECT 'Monthly Actives (#)' as metric
, DATE_TRUNC('month',last_day_month) AS month
-- , MIN(DATE_TRUNC('day',rs.current_end_ts)) AS period_start_date
-- , MAX(DATE_TRUNC('day',rs.current_end_ts)) AS period_end_date
, COUNT(DISTINCT driver_id) AS active_guests_trailing_12M
, COUNT(DISTINCT vehicle_id) AS active_vehicles_trailing_12M
, COUNT(DISTINCT owner_id) AS active_hosts_trailing_12M

FROM
(SELECT LAST_DAY(DATE_TRUNC('month', date)) AS last_day_month
FROM analytics.date
WHERE DATE_TRUNC('month',date) < DATE_TRUNC('month',CURRENT_DATE) -- Only Past Months
GROUP BY last_day_month) d

LEFT JOIN analytics.reservation_summary rs
ON DATE_TRUNC('month',rs.current_end_ts) BETWEEN d.last_day_month - INTERVAL '365 days' AND d.last_day_month

WHERE rs.current_status NOT IN (2,11)
    AND rs.trip_end_ts IS NOT NULL
GROUP BY month
HAVING DATE_TRUNC('month',last_day_month) >= '2012-01-01'
ORDER BY month ASC;



------------------------------------------------------------------------------------------------------------------------
-- GUEST NPS
------------------------------------------------------------------------------------------------------------------------

WITH table1 AS (
    SELECT
      rs.driver_id,
      rs.reservation_id              AS rs_reservation_id,
      nps.id,
      nps.driver_id,
      nps.reservation_id                nps_reservation_id,
      current_end_ts,
      LEAD(current_end_ts)
      OVER (
        PARTITION BY rs.driver_id
        ORDER BY rs.current_end_ts ) AS next_start_reservation,
      nps.created                    AS created,
      nps.user,
      CASE WHEN nps.created >= current_end_ts
        AND nps.created < (CASE WHEN LEAD(current_end_ts) OVER (PARTITION BY rs.driver_id ORDER BY rs.current_end_ts) IS NOT NULL THEN LEAD(current_end_ts)
                            OVER (PARTITION BY rs.driver_id ORDER BY rs.current_end_ts) ELSE '2020-01-01' END) THEN 1 ELSE 0 END AS linked
    FROM analytics.nps_response nps
    LEFT JOIN reservation_summary rs
      ON rs.driver_id = nps.driver_id
      AND rs.trip_end_ts IS NOT NULL
      AND rs.current_status NOT IN (2, 11)
    WHERE "user" = 'renter'
    ORDER BY 1, 2, 3, 4, 5
),

table2 AS (
      SELECT
      DATE_TRUNC('day', nps.created) AS nps_date
    , COUNT( DISTINCT CASE WHEN nps.user = 'renter' THEN nps.id END ) AS num_nps_response_guest
    , COUNT( DISTINCT CASE WHEN nps.user = 'renter' AND score IN (9, 10) THEN nps.id END ) AS num_nps_response_guest_promoters
    , COUNT( DISTINCT CASE WHEN nps.user = 'renter' AND score BETWEEN 0 AND 6 THEN nps.id END ) AS num_nps_response_guest_detractors
  FROM table1 t1
  LEFT JOIN analytics.nps_response nps
  ON t1.id = nps.id
  WHERE 1=1
  AND linked = 1
  GROUP BY 1
  ORDER BY 1
)

---Monthly
--------------------------------------------------------------------------------------------------------------

--  SELECT DATE_TRUNC('month',nps_date) AS month,
--  SUM(num_nps_response_guest_promoters)*1.0/SUM(num_nps_response_guest)*1.0
--      -
-- SUM(num_nps_response_guest_detractors)*1.0/SUM(num_nps_response_guest)*1.0 AS guest_nps_completed_trips
-- FROM table2
-- GROUP BY 1
-- ORDER BY 1;


-- Yearly
-- ----------------------------------------------------------------------------------------------------------------
SELECT DATE_TRUNC('year',nps_date) AS year,
SUM(num_nps_response_guest_promoters)*1.0/SUM(num_nps_response_guest)*1.0
  -
SUM(num_nps_response_guest_detractors)*1.0/SUM(num_nps_response_guest)*1.0 AS guest_nps_completed_trips
 FROM table2
 GROUP BY 1
 ORDER BY 1;


------------------------------------------------------------------------------------------------------------------------
-- HOST NPS
------------------------------------------------------------------------------------------------------------------------

WITH table1 AS (
    SELECT
      rs.driver_id,
      rs.reservation_id              AS rs_reservation_id,
      nps.id,
      nps.driver_id,
      nps.reservation_id                nps_reservation_id,
      current_end_ts,
      LEAD(current_end_ts)
      OVER (
        PARTITION BY rs.driver_id
        ORDER BY rs.current_end_ts ) AS next_start_reservation,
      nps.created                    AS created,
      nps.user,
      CASE WHEN nps.created >= current_end_ts AND nps.created <
                (CASE WHEN LEAD(current_end_ts) OVER (PARTITION BY rs.driver_id ORDER BY rs.current_end_ts) IS NOT NULL THEN
                  LEAD(current_end_ts) OVER (PARTITION BY rs.driver_id ORDER BY rs.current_end_ts) ELSE '2020-01-01' END)
        THEN 1
      ELSE 0 END                     AS linked
    FROM analytics.nps_response nps
    LEFT JOIN reservation_summary rs
        ON rs.owner_id = nps.driver_id
           AND rs.trip_end_ts IS NOT NULL
           AND rs.current_status NOT IN (2, 11)
           AND rs.current_end_ts <= CURRENT_DATE
    WHERE "user" = 'owner'
    ORDER BY 1, 2, 3, 4, 5
),
table2 AS (
      SELECT
      DATE_TRUNC('day', nps.created) AS nps_date
    , COUNT( DISTINCT CASE WHEN nps.user = 'owner' THEN nps.id END ) AS num_nps_response_host
    , COUNT( DISTINCT CASE WHEN nps.user = 'owner' AND score IN (9, 10) THEN nps.id END ) AS num_nps_response_host_promoters
    , COUNT( DISTINCT CASE WHEN nps.user = 'owner' AND score BETWEEN 0 AND 6 THEN nps.id END ) AS num_nps_response_host_detractors
  FROM table1 t1
  LEFT JOIN analytics.nps_response nps
  ON t1.id = nps.id
  WHERE 1=1
  AND linked = 1
  GROUP BY 1
  ORDER BY 1
)

-- Monthly
----------------------------------------------------------------------------------------------------------------

SELECT DATE_TRUNC('month',nps_date) AS month,
SUM(num_nps_response_host_promoters)*1.0/SUM(num_nps_response_host)*1.0
-
SUM(num_nps_response_host_detractors)*1.0/SUM(num_nps_response_host)*1.0 AS host_nps_completed_trips
FROM table2
GROUP BY 1
ORDER BY 1;


-- Yearly
----------------------------------------------------------------------------------------------------------------
--
SELECT DATE_TRUNC('year',nps_date) AS year,
SUM(num_nps_response_host_promoters)*1.0/SUM(num_nps_response_host)*1.0
 -
 SUM(num_nps_response_host_detractors)*1.0/SUM(num_nps_response_host)*1.0 AS host_nps_completed_trips
 FROM table2
 GROUP BY 1
 ORDER BY 1;

------------------------------------------------------------------------------------------------------------------------
-- SEARCH SESSIONS (#)
------------------------------------------------------------------------------------------------------------------------

SELECT *
FROM

-- MongoDB-based: for 2015 and 2016 years
------------------------------------------------------------------------------------------------------------------------
(SELECT DATE_TRUNC('month',day) AS month
, 'Search Sessions (#)' AS metric_name
, SUM(num_search) AS value
FROM analytics.search_funnel
WHERE DATE_TRUNC('month',day) BETWEEN '2015-01-01' AND '2016-12-01'
GROUP BY 1,2

UNION

-- SEGMENT-based: as of 2017
------------------------------------------------------------------------------------------------------------------------
SELECT DATE_TRUNC('month', date) as month
 , 'Search Sessions (#)' AS metric_name
, SUM(cy_amount) as value
FROM finance.metric_summary_consol_2019
WHERE metric IN ('Search Sessions (#) - Segment')
AND DATE_TRUNC('month',date) >= '2017-01-01'
GROUP BY 1,2
ORDER BY 1;



------------------------------------------------------------------------------------------------------------------------
-- CONVERSION METRICS
------------------------------------------------------------------------------------------------------------------------

-- I. Search to Trip
------------------------------------------------------------------------------------------------------------------------

-- Search Sessions
------------------------------------
SELECT *
FROM
-- MongoDB-based: for 2015 and 2016 years
------------------------------------------------------------------------------------------------------------------------
(SELECT DATE_TRUNC('month',day) AS month
, 'Search Sessions (#)' AS metric_name
, SUM(num_search) AS value
FROM analytics.search_funnel
WHERE DATE_TRUNC('month',day) BETWEEN '2015-01-01' AND '2016-12-01'
GROUP BY 1,2
UNION
-- SEGMENT-based: as of 2017
------------------------------------------------------------------------------------------------------------------------
SELECT DATE_TRUNC('month', date) as month
 , 'Search Sessions (#)' AS metric_name
, SUM(cy_amount) as value
FROM finance.metric_summary_consol_2019
WHERE metric IN ('Search Sessions (#) - Segment')
AND DATE_TRUNC('month',date) >= '2017-01-01'
GROUP BY 1,2)
ORDER BY 1;

-- Trips
------------------------------------
SELECT DATE_TRUNC('mon',current_end_ts) as month
, COUNT(DISTINCT CASE WHEN current_status NOT IN (2,11) AND is_ever_booked = 1 AND trip_end_ts IS NOT NULL THEN reservation_id END) AS trips
FROM analytics.reservation_summary
WHERE DATE_TRUNC('year',current_end_ts) >= '2015-01-01'
GROUP BY 1
ORDER BY 1;


-- II. Fulfillment (ATTEMPT-TO-BOOK)
------------------------------------------------------------------------------------------------------------------------

SELECT
 TO_CHAR(DATE_TRUNC('month', attempt_summary.min_created ), 'YYYY-MM') AS first_request_month,
  COUNT(DISTINCT CASE WHEN attempt_aggregate_data.is_active then attempt_summary.attempt_id END) AS num_active_attempts,
  COUNT(DISTINCT attempt_summary.attempt_id) AS num_attempts,
 (COUNT(DISTINCT CASE WHEN attempt_aggregate_data.is_active then attempt_summary.attempt_id END)*1.0) / (COUNT(DISTINCT attempt_summary.attempt_id ))  AS attempt_to_book_net_of_cancellations

FROM   (SELECT *
    FROM analytics.attempt_summary_requests_and_inquiries
    UNION
    SELECT *
    FROM analytics.attempt_summary_requests_and_inquiries_20180816)  AS attempt_summary

LEFT JOIN

(SELECT a.*  --
, b.attempt_rank
FROM

  (SELECT attempt_id
      , BOOL_OR(current_status IN (2,11)) AS is_ever_cancelled
      , BOOL_OR(current_status = 2) AS is_ever_cancelled_by_renter
      , BOOL_OR(current_status = 11) AS is_ever_cancelled_by_owner
      , BOOL_OR(current_status NOT IN (2,11) AND is_ever_booked =1) AS is_active
      , BOOL_OR(is_ever_booked = 1) AS is_ever_booked
      , BOOL_OR(is_instant_book = 1) AS is_ever_instant_book
      , COUNT(DISTINCT reservation_id) AS num_request
      , SUM(CASE WHEN current_status = 11 AND DATEDIFF('hour',modified,current_start_ts) BETWEEN 0 AND 24 THEN 1 ELSE 0 END) AS num_last_minute_owner_cancellations
      , SUM(CASE WHEN is_instant_book = 1 THEN 1 ELSE 0 END) AS num_instant_book_request
      , SUM(CASE WHEN is_instant_book = 1 AND current_status = 11 THEN 1 ELSE 0 END) AS num_instant_book_request_cancelled_by_owner
      , SUM(CASE WHEN is_instant_book = 1 AND current_status = 2 THEN 1 ELSE 0 END) AS num_instant_book_request_cancelled_by_renter
      , COUNT(DISTINCT CASE WHEN rs.is_ever_booked = 1 THEN reservation_id END) AS num_booked
      , COUNT(DISTINCT CASE WHEN rs.is_ever_booked = 1 AND rs.current_status NOT IN (2,11) THEN reservation_id END) AS num_booked_net_of_cancellations
      , COUNT(DISTINCT CASE WHEN rs.is_ever_booked = 1 AND rs.current_status NOT IN (11) THEN reservation_id END) AS num_booked_net_of_host_cancellations
  FROM
  (SELECT *
    FROM analytics.attempt_summary_requests_and_inquiries
    UNION
    SELECT *
    FROM analytics.attempt_summary_requests_and_inquiries_20180816)

  LEFT JOIN
        (SELECT *
    FROM analytics.reservation_to_attempt_requests_and_inquiries
    UNION
    SELECT *
    FROM analytics.reservation_to_attempt_requests_and_inquiries_20180816)

      USING (attempt_id)
  JOIN analytics.reservation_summary rs
      USING (reservation_id)
  GROUP BY attempt_id) a


LEFT JOIN

  (SELECT
  attempt_id
  , driver_id
  , min_created
  , rank() over (PARTITION BY driver_id ORDER BY min_created) attempt_rank
  FROM
  (SELECT *
    FROM analytics.attempt_summary_requests_and_inquiries
    UNION
    SELECT *
    FROM analytics.attempt_summary_requests_and_inquiries_20180816)
  ) b

USING (attempt_id)
ORDER BY attempt_id DESC) AS attempt_aggregate_data

ON attempt_summary.attempt_id = attempt_aggregate_data.attempt_id

GROUP BY DATE_TRUNC('month', attempt_summary.min_created )
ORDER BY 1;


-- III. Instant Book Share of Gross Revenue (%)
------------------------------------------------------------------------------------------------------------------------

SELECT DATE_TRUNC('month',current_end_ts) as activity_month
, CASE WHEN rs.is_instant_book = 1 THEN 'Instant Book'
       ELSE 'Request to Book' END as booking_type
, SUM(gross_revenue_usd) as gross_revenue
FROM analytics.reservation_summary rs
WHERE DATE_TRUNC('mon',current_end_ts) BETWEEN '2013-01-01' AND '2019-08-31'
GROUP BY 1,2
ORDER BY 1,2;




------------------------------------------------------------------------------------------------------------------------
-- POWER HOSTS
------------------------------------------------------------------------------------------------------------------------
-- BOD DECK POWER HOST QUERY : BASED ON HOST QUALITY METRICS --

 WITH oqbd AS

 (SELECT
    year.*,
    quarter.num_completed_trips_last_90_days,
    quarter.num_reviewed_trips_last_90_days,
    quarter.num_zero_star_reviews_last_90_days,
    quarter.num_one_star_reviews_last_90_days,
    quarter.num_two_star_reviews_last_90_days,
    quarter.num_three_star_reviews_last_90_days,
    quarter.num_four_star_reviews_last_90_days,
    quarter.num_five_star_reviews_last_90_days,
    quarter.num_approval_last_90_days,
    quarter.num_response_last_90_days,
    quarter.num_request_last_90_days,
    quarter.num_owner_cancellation_rebooked_last_90_days,
    quarter.num_owner_cancellation_last_90_days,
    quarter.num_booking_last_90_days,
    quarter.currency_last_90_days,
    quarter.earnings_usd_last_90_days,
    quarter.earnings_local_currency_last_90_days
  FROM analytics.owner_quality_metrics_last_365_days year
  LEFT JOIN analytics.owner_quality_metrics_last_90_days quarter
    USING (owner_id, date)
 ),

ph AS

(SELECT
    oqbd.date AS date,
    oqbd.owner_id AS owner_id,
    CASE WHEN (ROUND(oqbd.num_response_last_365_days*1.0/NULLIF(oqbd.num_request_last_365_days,0)*1.0,2)) >= 0.95
            AND (ROUND(oqbd.num_approval_last_365_days*1.0/NULLIF(oqbd.num_request_last_365_days,0)*1.0,2)) >= 0.9
            AND (ROUND((oqbd.num_booking_last_365_days-oqbd.num_owner_cancellation_last_365_days-oqbd.num_owner_cancellation_rebooked_last_365_days)*1.0/NULLIF((oqbd.num_booking_last_365_days-oqbd.num_owner_cancellation_rebooked_last_365_days),0)*1.0,2)) >= 0.95
            AND (ROUND(oqbd.num_five_star_reviews_last_365_days*1.0/NULLIF(oqbd.num_reviewed_trips_last_365_days,0)*1.0,2)) >= 0.9
            AND oqbd.num_reviewed_trips_last_365_days >= 50 AND oqbd.earnings_usd_last_90_days >= 9000
            AND osbd.is_opi = False THEN 'Yes' ELSE 'No' END AS is_power_host
FROM oqbd
LEFT JOIN analytics.owner_summary_by_day osbd
    ON osbd.owner_id = oqbd.owner_id
    AND osbd.date = oqbd.date)

  (SELECT
     DATE_TRUNC('month', current_end_ts)                                                                            AS activity_month,
     CASE WHEN ph.is_power_host IS NULL OR ph.is_power_host = 'No' THEN 'Regular Host'
       WHEN ph.is_power_host = 'Yes' THEN 'Power Host'
       ELSE 'TBD' END                                                                                               AS host_status,
     SUM(rs.gross_revenue_usd)                                                                                      AS gross_revenue_usd,
     RATIO_TO_REPORT(SUM(rs.gross_revenue_usd)) OVER (PARTITION BY activity_month)                                  AS share_gross_revenue_usd,
     COUNT(DISTINCT CASE WHEN is_ever_booked = 1
                          AND current_status NOT IN (2,11)
                          AND trip_end_ts IS NOT NULL THEN rs.owner_id END)                                         AS num_active_hosts,
     RATIO_TO_REPORT(COUNT(DISTINCT CASE WHEN is_ever_booked = 1
                          AND current_status NOT IN (2,11)
                          AND trip_end_ts IS NOT NULL THEN rs.owner_id END)) OVER (PARTITION BY activity_month)     AS share_active_hosts
   FROM analytics.reservation_summary rs
   LEFT JOIN ph
       ON ph.owner_id = rs.owner_id
          AND DATE_TRUNC('day', ph.date) = DATE_TRUNC('day', rs.current_end_ts)
   GROUP BY 1, 2
   ORDER BY 1, 2);


SELECT DATE_TRUNC('month', current_end_ts)  AS activity_month
, SUM(rs.gross_revenue_usd) AS gross_revenue_usd
FROM analytics.reservation_summary rs
GROUP BY 1
ORDER BY 1


------------------------------------------------------------------------------------------------------------------------


select date_trunc('mon', date)
, metric
, sum(cy_amount) as cy_amount
from finance.metric_summary_consol_2019
where metric in ('Rental Days (#)')
group by 1,2
order by 1,2


select top 10*
from analytics.reservation_summary



-----------III FULFILLMENT VARUN QUERY ----------------


DROP TABLE IF EXISTS #guest_attempt_rank;
SELECT driver_id
  , attempt_id
  , RANK() OVER (PARTITION BY driver_id ORDER BY attempt_id ASC) AS attempt_rank
INTO #guest_attempt_rank
FROM analytics.attempt_summary_requests
GROUP BY 1,2
;
DROP TABLE IF EXISTS #temp_ms_attempt_1;
SELECT
  DATE_TRUNC('day', asri.min_created) AS attempt_date
, CASE WHEN rs.reservation_country IN ('US', 'CA', 'GB', 'DE')
      THEN rs.reservation_country
      ELSE 'Other' END                    AS country
, res_agg.is_opi                           AS is_opi
, res_agg.is_instant_book             AS is_instant_book
, CASE WHEN gar.attempt_rank = 1 THEN 'First Time'
       WHEN gar.attempt_rank > 1 THEN 'Repeat'
       ELSE 'Unknown' END as first_or_returning_guest_attempt
, COUNT(DISTINCT asri.attempt_id)     AS num_attempts
, COUNT(DISTINCT CASE WHEN rs.is_ever_booked = 1 THEN asri.attempt_id END) AS num_attempts_with_bookings
, COUNT(DISTINCT CASE WHEN rs.is_ever_booked = 1 AND rs.current_status NOT IN (2,11) THEN asri.attempt_id END) AS num_attempts_with_bookings_noc
INTO #temp_ms_attempt_1
FROM analytics.attempt_summary_requests asri
LEFT JOIN
  (SELECT
     attempt_id,
     CASE WHEN BOOL_AND(is_instant_book) THEN 'Instant Book'
          WHEN BOOL_OR(is_instant_book) THEN 'Mixed'
          ELSE 'Request to Book' END AS is_instant_book,
     CASE WHEN BOOL_AND(is_opi) THEN 'OPI'
          WHEN BOOL_OR(is_opi)  THEN 'Mixed'
          ELSE 'P2P' END AS is_opi
   FROM analytics.reservation_to_attempt_requests r2a
   JOIN analytics.reservation_summary rs
     USING (reservation_id)
   GROUP BY attempt_id) res_agg
    ON res_agg.attempt_id = asri.attempt_id
  LEFT JOIN #guest_attempt_rank gar
    ON gar.attempt_id = asri.attempt_id
  LEFT JOIN analytics.reservation_to_attempt_requests r2a
    ON asri.attempt_id = r2a.attempt_id
  LEFT JOIN analytics.reservation_summary rs
    ON rs.reservation_id = r2a.reservation_id
GROUP BY 1, 2, 3, 4, 5;
select DATE_TRUNC('month',attempt_date),sum(num_attempts),sum(num_attempts_with_bookings_noc)
from #temp_ms_attempt_1 group by 1;



-------------- Actives by Market ----------------
SELECT 'Monthly Actives (#)' as metric
, DATE_TRUNC('month',last_day_month) AS month
, case when COALESCE(d2l.last_mobile_phone_country,d2l.sign_up_ip_country,ds.license_country,d2l.last_credit_card_country) in ('US','CA','DE','GB')  then COALESCE(d2l.last_mobile_phone_country,d2l.sign_up_ip_country,ds.license_country,d2l.last_credit_card_country) else 'other' end as country
, case when ds.market_area in ('Los Angeles-Riverside-Orange County','San Francisco-Oakland-San Jose','Honolulu','Miami-Fort Lauderdale','Denver-Boulder-Greeley','New York-Northern New Jersey-Long Island, NY-NJ-CT','Atlanta','Las Vegas, NV-AZ','San Diego','Phoenix-Mesa','Chicago-Gary-Kenosha, IL-IN-WI','Washington-Baltimore, DC-MD-VA-WV','Dallas-Fort Worth','Orlando','Boston-Worcester-Lawrence, MA-NH-ME-CT','Quebec Champlain_Quebec Communauté-Urbaine-de-Montréal --- Quebec --- Montréal, Longueuil, Saint-Laurent','Seattle-Tacoma-Bremerton','Houston-Galveston-Brazoria','Philadelphia-Wilmington-Atlantic City, PA-NJ-DE-MD','Portland-Vancouver, OR-WA')  then ds.market_area else 'other' end as market_area
-- , MIN(DATE_TRUNC('day',rs.current_end_ts)) AS period_start_date
-- , MAX(DATE_TRUNC('day',rs.current_end_ts)) AS period_end_date
, COUNT(DISTINCT ds.driver_id) AS active_guests_trailing_12M
, COUNT(DISTINCT rs.driver_id) AS active_guests_trailing_12M
, COUNT(DISTINCT rs.vehicle_id) AS active_vehicles_trailing_12M
, COUNT(DISTINCT rs.owner_id) AS active_hosts_trailing_12M
FROM
(SELECT LAST_DAY(DATE_TRUNC('month', date)) AS last_day_month
FROM analytics.date
WHERE DATE_TRUNC('month',date) < DATE_TRUNC('month',CURRENT_DATE) -- Only Past Months
GROUP BY last_day_month) d
LEFT JOIN analytics.reservation_summary rs
ON DATE_TRUNC('month',rs.current_end_ts) BETWEEN d.last_day_month - INTERVAL '365 days' AND d.last_day_month
LEFT JOIN analytics.driver_summary ds on ds.driver_id = rs.driver_id
LEFT JOIN analytics.driver_to_location d2l
  on d2l.driver_id = ds.driver_id
WHERE rs.current_status NOT IN (2,11)
    AND rs.trip_end_ts IS NOT NULL
GROUP BY 2,3,4
HAVING DATE_TRUNC('month',last_day_month) >= '2014-01-01'
ORDER BY month ASC;


SELECT

  DATE_TRUNC('month',rs.current_end_ts)::DATE as current_end_date
, CASE WHEN rs.reservation_country IN ('US','CA','GB','DE') THEN rs.reservation_country ELSE 'Other' END as country
, case when rs.market_area in ('Los Angeles-Riverside-Orange County','San Francisco-Oakland-San Jose','Honolulu','Miami-Fort Lauderdale','Denver-Boulder-Greeley','New York-Northern New Jersey-Long Island, NY-NJ-CT','Atlanta','Las Vegas, NV-AZ','San Diego','Chicago-Gary-Kenosha, IL-IN-WI','Washington-Baltimore, DC-MD-VA-WV','Boston-Worcester-Lawrence, MA-NH-ME-CT','Phoenix-Mesa','Dallas-Fort Worth','Orlando','Quebec Champlain_Quebec Communauté-Urbaine-de-Montréal --- Quebec --- Montréal, Longueuil, Saint-Laurent','Seattle-Tacoma-Bremerton','Houston-Galveston-Brazoria','Portland-Vancouver, OR-WA','Philadelphia-Wilmington-Atlantic City, PA-NJ-DE-MD')
  then rs.market_area else 'other' end as market_area
, CASE WHEN l.type IN ('AIRPORT','AIRPORT_LEGACY') THEN 'Airport' ELSE 'City' END as airport_city_ind
, CASE WHEN rs.custom_delivery_fee IS NOT NULL AND rs.airport_delivery_fee IS NULL THEN 'Custom Delivery'
       WHEN rs.custom_delivery_fee IS NULL AND rs.airport_delivery_fee IS NOT NULL THEN 'Airport Delivery'
       WHEN rs.custom_delivery_fee IS NOT NULL AND rs.airport_delivery_fee IS NOT NULL THEN 'Other Delivery'
       ELSE 'No Delivery' END as delivery_type


, COUNT(DISTINCT rs.reservation_id) as contacts
, COUNT(DISTINCT CASE WHEN is_ever_booked = 1 THEN rs.reservation_id END) AS booked_trips
, COUNT(DISTINCT CASE WHEN current_status NOT IN (2,11) AND is_ever_booked = 1 THEN rs.reservation_id END) AS booked_trips_noc
, COUNT(DISTINCT CASE WHEN current_status NOT IN (2,11) AND is_ever_booked = 1 AND trip_end_ts IS NOT NULL THEN rs.reservation_id END) AS trips
, SUM(rs.gross_revenue_usd) as gross_revenue_usd
, SUM(rs.gross_revenue) as gross_revenue_local

FROM analytics.reservation_summary rs

  JOIN analytics.vehicle_summary vs
    ON vs.vehicle_id = rs.vehicle_id

  JOIN analytics.driver_summary ds
    ON ds.driver_id = rs.driver_id

  LEFT JOIN mysql_relayrides.location l
    on rs.location_id= l.id
WHERE DATE_TRUNC('month',rs.current_end_ts) >= '2016-01-01'
GROUP BY 1,2,3,4,5
ORDER BY 1,2,3,4,5
;



-----------
DROP TABLE IF EXISTS #guest_attempt_rank;
SELECT driver_id
  , attempt_id
  , RANK() OVER (PARTITION BY driver_id ORDER BY attempt_id ASC) AS attempt_rank
INTO #guest_attempt_rank
FROM analytics.attempt_summary_requests
GROUP BY 1,2
;
DROP TABLE IF EXISTS #temp_ms_attempt_1;
SELECT
  DATE_TRUNC('day', asri.min_created) AS attempt_date
, CASE WHEN rs.reservation_country IN ('US', 'CA', 'GB', 'DE')
      THEN rs.reservation_country
      ELSE 'Other' END                    AS country
, case when rs.market_area in ('Los Angeles-Riverside-Orange County','San Francisco-Oakland-San Jose','Honolulu','Miami-Fort Lauderdale','Denver-Boulder-Greeley','New York-Northern New Jersey-Long Island, NY-NJ-CT','Atlanta','Las Vegas, NV-AZ','San Diego','Chicago-Gary-Kenosha, IL-IN-WI','Washington-Baltimore, DC-MD-VA-WV','Boston-Worcester-Lawrence, MA-NH-ME-CT','Phoenix-Mesa','Dallas-Fort Worth','Orlando','Quebec Champlain_Quebec Communauté-Urbaine-de-Montréal --- Quebec --- Montréal, Longueuil, Saint-Laurent','Seattle-Tacoma-Bremerton','Houston-Galveston-Brazoria','Portland-Vancouver, OR-WA','Philadelphia-Wilmington-Atlantic City, PA-NJ-DE-MD')  then rs.market_area else 'other' end as market_area
, res_agg.is_opi                           AS is_opi
, res_agg.is_instant_book             AS is_instant_book
, CASE WHEN gar.attempt_rank = 1 THEN 'First Time'
       WHEN gar.attempt_rank > 1 THEN 'Repeat'
       ELSE 'Unknown' END as first_or_returning_guest_attempt
, COUNT(DISTINCT asri.attempt_id)     AS num_attempts
, COUNT(DISTINCT CASE WHEN rs.is_ever_booked = 1 THEN asri.attempt_id END) AS num_attempts_with_bookings
, COUNT(DISTINCT CASE WHEN rs.is_ever_booked = 1 AND rs.current_status NOT IN (2,11) THEN asri.attempt_id END) AS num_attempts_with_bookings_noc
INTO #temp_ms_attempt_1
FROM analytics.attempt_summary_requests asri
LEFT JOIN
  (SELECT
     attempt_id,
     CASE WHEN BOOL_AND(is_instant_book) THEN 'Instant Book'
          WHEN BOOL_OR(is_instant_book) THEN 'Mixed'
          ELSE 'Request to Book' END AS is_instant_book,
     CASE WHEN BOOL_AND(is_opi) THEN 'OPI'
          WHEN BOOL_OR(is_opi)  THEN 'Mixed'
          ELSE 'P2P' END AS is_opi
   FROM analytics.reservation_to_attempt_requests r2a
   JOIN analytics.reservation_summary rs
     USING (reservation_id)
   GROUP BY attempt_id) res_agg
    ON res_agg.attempt_id = asri.attempt_id
  LEFT JOIN #guest_attempt_rank gar
    ON gar.attempt_id = asri.attempt_id
  LEFT JOIN analytics.reservation_to_attempt_requests r2a
    ON asri.attempt_id = r2a.attempt_id
  LEFT JOIN analytics.reservation_summary rs
    ON rs.reservation_id = r2a.reservation_id
GROUP BY 1, 2, 3, 4, 5, 6;

select DATE_TRUNC('month',attempt_date),country,market_area,sum(num_attempts),sum(num_attempts_with_bookings_noc)
from #temp_ms_attempt_1 group by 1,2,3;


--- TRIPS DETAIL -------

SELECT

  DATE_TRUNC('month',rs.current_end_ts)::DATE as current_end_date
, CASE WHEN rs.reservation_country IN ('US','CA','GB','DE') THEN rs.reservation_country ELSE 'Other' END as country
, case when rs.market_area in ('Los Angeles-Riverside-Orange County','San Francisco-Oakland-San Jose','Honolulu','Miami-Fort Lauderdale','Denver-Boulder-Greeley','New York-Northern New Jersey-Long Island, NY-NJ-CT','Atlanta','Las Vegas, NV-AZ','San Diego','Chicago-Gary-Kenosha, IL-IN-WI','Washington-Baltimore, DC-MD-VA-WV','Boston-Worcester-Lawrence, MA-NH-ME-CT','Phoenix-Mesa','Dallas-Fort Worth','Orlando','Quebec Champlain_Quebec Communauté-Urbaine-de-Montréal --- Quebec --- Montréal, Longueuil, Saint-Laurent','Seattle-Tacoma-Bremerton','Houston-Galveston-Brazoria','Portland-Vancouver, OR-WA','Philadelphia-Wilmington-Atlantic City, PA-NJ-DE-MD')
  then rs.market_area else 'other' end as market_area
, CASE WHEN l.type IN ('AIRPORT','AIRPORT_LEGACY') THEN 'Airport' ELSE 'City' END as airport_city_ind
, CASE WHEN rs.custom_delivery_fee IS NOT NULL AND rs.airport_delivery_fee IS NULL THEN 'Custom Delivery'
       WHEN rs.custom_delivery_fee IS NULL AND rs.airport_delivery_fee IS NOT NULL THEN 'Airport Delivery'
       WHEN rs.custom_delivery_fee IS NOT NULL AND rs.airport_delivery_fee IS NOT NULL THEN 'Other Delivery'
       ELSE 'No Delivery' END as delivery_type


, COUNT(DISTINCT rs.reservation_id) as contacts
, COUNT(DISTINCT CASE WHEN is_ever_booked = 1 THEN rs.reservation_id END) AS booked_trips
, COUNT(DISTINCT CASE WHEN current_status NOT IN (2,11) AND is_ever_booked = 1 THEN rs.reservation_id END) AS booked_trips_noc
, COUNT(DISTINCT CASE WHEN current_status NOT IN (2,11) AND is_ever_booked = 1 AND trip_end_ts IS NOT NULL THEN rs.reservation_id END) AS trips
, SUM(rs.gross_revenue_usd) as gross_revenue_usd
, SUM(rs.gross_revenue) as gross_revenue_local

FROM analytics.reservation_summary rs

  JOIN analytics.vehicle_summary vs
    ON vs.vehicle_id = rs.vehicle_id

  JOIN analytics.driver_summary ds
    ON ds.driver_id = rs.driver_id

  LEFT JOIN mysql_relayrides.location l
    on rs.location_id= l.id
WHERE DATE_TRUNC('month',rs.current_end_ts) >= '2016-01-01'
GROUP BY 1,2,3,4,5
ORDER BY 1,2,3,4,5
;



-- High Volume Hosts # (ever in the year)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
with hvh as (SELECT
 oqmd.date
 , oqmd.owner_id AS owner_id
FROM analytics.owner_quality_metrics_by_day oqmd
LEFT JOIN analytics.owner_summary_by_day osbd
 ON osbd.owner_id = oqmd.owner_id
 AND osbd.date = oqmd.date
WHERE ((osbd.country = 'US'
--      AND (ROUND(oqmd.num_response_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.95
--      AND (ROUND(oqmd.num_approval_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.9
--      AND (ROUND((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days)*1.0/NULLIF((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days),0)*1.0,2)) >= 0.95
--      AND (ROUND(oqmd.num_five_star_reviews_last_365_days*1.0/NULLIF(oqmd.num_reviewed_trips_last_365_days,0)*1.0,2)) >= 0.9
--      AND oqmd.num_reviewed_trips_last_365_days >= 50
     AND oqmd.earnings_usd_last_90_days >= 9000)
    -- AND (osbd.is_opi = 1) = False)
OR
(osbd.country = 'CA'
--   AND (ROUND(oqmd.num_response_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.95
--   AND (ROUND(oqmd.num_approval_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.9
--   AND (ROUND((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days)*1.0/NULLIF((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days),0)*1.0,2)) >= 0.95
--   AND (ROUND(oqmd.num_five_star_reviews_last_365_days*1.0/NULLIF(oqmd.num_reviewed_trips_last_365_days,0)*1.0,2)) >= 0.9
--   AND oqmd.num_reviewed_trips_last_365_days >= 25
  AND oqmd.earnings_local_currency_last_90_days >= 5000
  --AND (osbd.is_opi = 1) = False)
     ))
GROUP BY 1,2
ORDER BY 1,2)
-- High Volume Hosts Trips & Revenue
SELECT DATE_TRUNC('month',trip_end_ts) AS year
,  case when nvl(vs.market_area,'') in ('Los Angeles-Riverside-Orange County','San Francisco-Oakland-San Jose','Honolulu','Miami-Fort Lauderdale','Denver-Boulder-Greeley','New York-Northern New Jersey-Long Island, NY-NJ-CT','Atlanta','Las Vegas, NV-AZ','San Diego','Chicago-Gary-Kenosha, IL-IN-WI') then vs.market_area else 'other' end as market_area
, COUNT(DISTINCT rs.owner_id) AS num_active_owners
, COUNT(DISTINCT rs.reservation_id) AS num_trips
, SUM(rs.gross_revenue_usd) AS gross_revenue_usd
FROM analytics.reservation_summary rs
LEFT JOIN -- Issues with duplicates in vehicle_summary on 3.08
   (SELECT vehicle_id
   , MAX(market_area) AS market_area
   FROM analytics.vehicle_summary
   GROUP BY vehicle_id) vs
  ON rs.vehicle_id = nvl(vs.vehicle_id,0)
JOIN hvh -- Only Power Hosts
  ON DATE_TRUNC('day',rs.trip_end_ts) = hvh.date
  AND rs.owner_id = hvh.owner_id
WHERE trip_end_ts IS NOT NULL
AND current_status NOT IN (2,11)
AND DATE_TRUNC('day',trip_end_ts) BETWEEN '2015-01-01' AND '2019-06-30'
GROUP BY 1,2
ORDER BY 1;



-----------
SELECT

  DATE_TRUNC('month',rs.current_end_ts)::DATE as current_end_date
, CASE WHEN rs.reservation_country IN ('US','CA','GB','DE') THEN rs.reservation_country ELSE 'Other' END as country
, case when rs.market_area in ('Los Angeles-Riverside-Orange County','San Francisco-Oakland-San Jose','Honolulu','Miami-Fort Lauderdale','Denver-Boulder-Greeley','New York-Northern New Jersey-Long Island, NY-NJ-CT','Atlanta','Las Vegas, NV-AZ','San Diego','Chicago-Gary-Kenosha, IL-IN-WI','Washington-Baltimore, DC-MD-VA-WV','Boston-Worcester-Lawrence, MA-NH-ME-CT','Phoenix-Mesa','Dallas-Fort Worth','Orlando','Quebec Champlain_Quebec Communauté-Urbaine-de-Montréal --- Quebec --- Montréal, Longueuil, Saint-Laurent','Seattle-Tacoma-Bremerton','Houston-Galveston-Brazoria','Portland-Vancouver, OR-WA','Philadelphia-Wilmington-Atlantic City, PA-NJ-DE-MD')
  then rs.market_area else 'other' end as market_area
, CASE WHEN l.type IN ('AIRPORT','AIRPORT_LEGACY') THEN 'Airport' ELSE 'City' END as airport_city_ind
, CASE WHEN rs.custom_delivery_fee IS NOT NULL AND rs.airport_delivery_fee IS NULL THEN 'Custom Delivery'
       WHEN rs.custom_delivery_fee IS NULL AND rs.airport_delivery_fee IS NOT NULL THEN 'Airport Delivery'
       WHEN rs.custom_delivery_fee IS NOT NULL AND rs.airport_delivery_fee IS NOT NULL THEN 'Other Delivery'
       ELSE 'No Delivery' END as delivery_type


, COUNT(DISTINCT rs.reservation_id) as contacts
, COUNT(DISTINCT CASE WHEN is_ever_booked = 1 THEN rs.reservation_id END) AS booked_trips
, COUNT(DISTINCT CASE WHEN current_status NOT IN (2,11) AND is_ever_booked = 1 THEN rs.reservation_id END) AS booked_trips_noc
, COUNT(DISTINCT CASE WHEN current_status NOT IN (2,11) AND is_ever_booked = 1 AND trip_end_ts IS NOT NULL THEN rs.reservation_id END) AS trips
, SUM(rs.gross_revenue_usd) as gross_revenue_usd
, SUM(rs.gross_revenue) as gross_revenue_local

FROM analytics.reservation_summary rs

  JOIN analytics.vehicle_summary vs
    ON vs.vehicle_id = rs.vehicle_id

  JOIN analytics.driver_summary ds
    ON ds.driver_id = rs.driver_id

  LEFT JOIN mysql_relayrides.location l
    on rs.location_id= l.id
WHERE DATE_TRUNC('month',rs.current_end_ts) >= '2016-01-01'
GROUP BY 1,2,3,4,5
ORDER BY 1,2,3,4,5
;


select date_trunc ('day', date)
,metric
,sum(cy_amount) as cy_amount
from finance.metric_summary_consol_2019
where metric in (
                 'Vehicles in Search (#)'
    )
and date between '2016-01-01' and '2019-07-31'
group by 1,2
order by 1,2 ;


select date_trunc ('mon', date)
,metric
,sum(cy_amount) as cy_amount
from finance.metric_summary_consol_2019
where metric in (
                 'Search Sessions (#) - Segment'
    )
and date between '2016-01-01' and '2019-08-31'
group by 1,2
order by 1,2 ;

------------HVH--------------

DROP TABLE IF EXISTS #top_5;
SELECT DISTINCT market_area
INTO #top_5
FROM analytics.reservation_summary
WHERE market_area ilike '%Los Angeles%'
OR market_area ilike '%San Francisco%'
OR market_area ilike '%Honolulu%'
OR market_area ilike '%Miami%'
OR market_area ilike '%Denver%';

WITH hvh AS
(SELECT
 DATE_PART(year, oqmd.date )::integer AS year
 , oqmd.owner_id AS owner_id
FROM analytics.owner_quality_metrics_by_day oqmd
LEFT JOIN analytics.owner_summary_by_day osbd
 ON osbd.owner_id = oqmd.owner_id
 AND osbd.date = oqmd.date
LEFT JOIN #top_5 t5
  ON osbd.main_market_area = t5.market_area

WHERE ((osbd.country = 'US'
--      AND (ROUND(oqmd.num_response_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.95
--      AND (ROUND(oqmd.num_approval_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.9
--      AND (ROUND((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days)*1.0/NULLIF((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days),0)*1.0,2)) >= 0.95
--      AND (ROUND(oqmd.num_five_star_reviews_last_365_days*1.0/NULLIF(oqmd.num_reviewed_trips_last_365_days,0)*1.0,2)) >= 0.9
--      AND oqmd.num_reviewed_trips_last_365_days >= 50
     AND oqmd.earnings_usd_last_90_days >= 9000)
    -- AND (osbd.is_opi = 1) = False)

OR
(osbd.country = 'CA'
--   AND (ROUND(oqmd.num_response_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.95
--   AND (ROUND(oqmd.num_approval_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.9
--   AND (ROUND((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days)*1.0/NULLIF((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days),0)*1.0,2)) >= 0.95
--   AND (ROUND(oqmd.num_five_star_reviews_last_365_days*1.0/NULLIF(oqmd.num_reviewed_trips_last_365_days,0)*1.0,2)) >= 0.9
--   AND oqmd.num_reviewed_trips_last_365_days >= 25
  AND oqmd.earnings_local_currency_last_90_days >= 5000
  --AND (osbd.is_opi = 1) = False)
     ))

GROUP BY 1,2
ORDER BY 1,2)

SELECT year
, COUNT(DISTINCT owner_id) AS num_ph
FROM hvh
GROUP BY 1
ORDER BY 1;

WITH hvh AS
(SELECT
 oqmd.date
 , oqmd.owner_id AS owner_id
FROM analytics.owner_quality_metrics_by_day oqmd
LEFT JOIN analytics.owner_summary_by_day osbd
 ON osbd.owner_id = oqmd.owner_id
 AND osbd.date = oqmd.date
LEFT JOIN #top_5 t5
  ON osbd.main_market_area = t5.market_area

WHERE ((osbd.country = 'US'
--      AND (ROUND(oqmd.num_response_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.95
--      AND (ROUND(oqmd.num_approval_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.9
--      AND (ROUND((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days)*1.0/NULLIF((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days),0)*1.0,2)) >= 0.95
--      AND (ROUND(oqmd.num_five_star_reviews_last_365_days*1.0/NULLIF(oqmd.num_reviewed_trips_last_365_days,0)*1.0,2)) >= 0.9
--      AND oqmd.num_reviewed_trips_last_365_days >= 50
     AND oqmd.earnings_usd_last_90_days >= 9000)
    -- AND (osbd.is_opi = 1) = False)

OR
(osbd.country = 'CA'
--   AND (ROUND(oqmd.num_response_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.95
--   AND (ROUND(oqmd.num_approval_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.9
--   AND (ROUND((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days)*1.0/NULLIF((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days),0)*1.0,2)) >= 0.95
--   AND (ROUND(oqmd.num_five_star_reviews_last_365_days*1.0/NULLIF(oqmd.num_reviewed_trips_last_365_days,0)*1.0,2)) >= 0.9
--   AND oqmd.num_reviewed_trips_last_365_days >= 25
  AND oqmd.earnings_local_currency_last_90_days >= 5000
  --AND (osbd.is_opi = 1) = False)
     ))

GROUP BY 1,2
ORDER BY 1,2)

-- High Volume Hosts Trips & Revenue
SELECT DATE_TRUNC('year',trip_end_ts) AS year
, COUNT(DISTINCT rs.owner_id) AS num_active_owners
, COUNT(DISTINCT rs.reservation_id) AS num_trips
, SUM(rs.gross_revenue_usd) AS gross_revenue_usd
FROM analytics.reservation_summary rs
LEFT JOIN -- Issues with duplicates in vehicle_summary on 3.08
   (SELECT vehicle_id
   , MAX(market_area) AS market_area
   FROM analytics.vehicle_summary
   GROUP BY vehicle_id) vs
  ON rs.vehicle_id=vs.vehicle_id
LEFT JOIN #top_5 t5
  ON vs.market_area = t5.market_area

JOIN hvh -- Only Power Hosts
  ON DATE_TRUNC('day',rs.trip_end_ts) = hvh.date
  AND rs.owner_id = hvh.owner_id

WHERE trip_end_ts IS NOT NULL
AND current_status NOT IN (2,11)
GROUP BY 1
ORDER BY 1;

-- All Active Hosts
SELECT DATE_TRUNC('year',trip_end_ts) AS year
, CASE WHEN t5.market_area IS NOT NULL THEN 'Top 5 Market' ELSE 'Other Market' END AS host_market_area_status
,COUNT(DISTINCT owner_id) AS num_active_owners
, COUNT(DISTINCT reservation_id) AS num_trips
, SUM(gross_revenue_usd) AS gross_revenue_usd
FROM analytics.reservation_summary rs
LEFT JOIN -- Issues with duplicates in vehicle_summary on 3.08
   (SELECT vehicle_id
   , MAX(market_area) AS market_area
   FROM analytics.vehicle_summary
   GROUP BY vehicle_id) vs
  ON rs.vehicle_id=vs.vehicle_id
LEFT JOIN #top_5 t5
  ON vs.market_area = t5.market_area
WHERE trip_end_ts IS NOT NULL
AND current_status NOT IN (2,11)
GROUP BY 1,2
ORDER BY 1,2




------------MONTHLY HVH--------------

DROP TABLE IF EXISTS #top_5;
SELECT DISTINCT market_area
INTO #top_5
FROM analytics.reservation_summary
WHERE market_area ilike '%Los Angeles%'
OR market_area ilike '%San Francisco%'
OR market_area ilike '%Honolulu%'
OR market_area ilike '%Miami%'
OR market_area ilike '%Denver%';

WITH hvh AS
(SELECT
 DATE_PART(month, oqmd.date )::integer AS month
 , oqmd.owner_id AS owner_id
FROM analytics.owner_quality_metrics_by_day oqmd
LEFT JOIN analytics.owner_summary_by_day osbd
 ON osbd.owner_id = oqmd.owner_id
 AND osbd.date = oqmd.date
LEFT JOIN #top_5 t5
  ON osbd.main_market_area = t5.market_area

WHERE ((osbd.country = 'US'
--      AND (ROUND(oqmd.num_response_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.95
--      AND (ROUND(oqmd.num_approval_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.9
--      AND (ROUND((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days)*1.0/NULLIF((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days),0)*1.0,2)) >= 0.95
--      AND (ROUND(oqmd.num_five_star_reviews_last_365_days*1.0/NULLIF(oqmd.num_reviewed_trips_last_365_days,0)*1.0,2)) >= 0.9
--      AND oqmd.num_reviewed_trips_last_365_days >= 50
     AND oqmd.earnings_usd_last_90_days >= 9000)
    -- AND (osbd.is_opi = 1) = False)

OR
(osbd.country = 'CA'
--   AND (ROUND(oqmd.num_response_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.95
--   AND (ROUND(oqmd.num_approval_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.9
--   AND (ROUND((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days)*1.0/NULLIF((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days),0)*1.0,2)) >= 0.95
--   AND (ROUND(oqmd.num_five_star_reviews_last_365_days*1.0/NULLIF(oqmd.num_reviewed_trips_last_365_days,0)*1.0,2)) >= 0.9
--   AND oqmd.num_reviewed_trips_last_365_days >= 25
  AND oqmd.earnings_local_currency_last_90_days >= 5000
  --AND (osbd.is_opi = 1) = False)
     ))

GROUP BY 1,2
ORDER BY 1,2)

SELECT month
, COUNT(DISTINCT owner_id) AS num_ph
FROM hvh
GROUP BY 1
ORDER BY 1;

WITH hvh AS
(SELECT
 oqmd.date
 , oqmd.owner_id AS owner_id
FROM analytics.owner_quality_metrics_by_day oqmd
LEFT JOIN analytics.owner_summary_by_day osbd
 ON osbd.owner_id = oqmd.owner_id
 AND osbd.date = oqmd.date
LEFT JOIN #top_5 t5
  ON osbd.main_market_area = t5.market_area

WHERE ((osbd.country = 'US'
--      AND (ROUND(oqmd.num_response_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.95
--      AND (ROUND(oqmd.num_approval_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.9
--      AND (ROUND((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days)*1.0/NULLIF((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days),0)*1.0,2)) >= 0.95
--      AND (ROUND(oqmd.num_five_star_reviews_last_365_days*1.0/NULLIF(oqmd.num_reviewed_trips_last_365_days,0)*1.0,2)) >= 0.9
--      AND oqmd.num_reviewed_trips_last_365_days >= 50
     AND oqmd.earnings_usd_last_90_days >= 9000)
    -- AND (osbd.is_opi = 1) = False)

OR
(osbd.country = 'CA'
--   AND (ROUND(oqmd.num_response_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.95
--   AND (ROUND(oqmd.num_approval_last_365_days*1.0/NULLIF(oqmd.num_request_last_365_days,0)*1.0,2)) >= 0.9
--   AND (ROUND((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days)*1.0/NULLIF((oqmd.num_booking_last_365_days-oqmd.num_owner_cancellation_rebooked_last_365_days),0)*1.0,2)) >= 0.95
--   AND (ROUND(oqmd.num_five_star_reviews_last_365_days*1.0/NULLIF(oqmd.num_reviewed_trips_last_365_days,0)*1.0,2)) >= 0.9
--   AND oqmd.num_reviewed_trips_last_365_days >= 25
  AND oqmd.earnings_local_currency_last_90_days >= 5000
  --AND (osbd.is_opi = 1) = False)
     ))

GROUP BY 1,2
ORDER BY 1,2)

-- High Volume Hosts Trips & Revenue
SELECT DATE_TRUNC('month',trip_end_ts) AS month
, COUNT(DISTINCT rs.owner_id) AS num_active_owners
, COUNT(DISTINCT rs.reservation_id) AS num_trips
, SUM(rs.gross_revenue_usd) AS gross_revenue_usd
FROM analytics.reservation_summary rs
LEFT JOIN -- Issues with duplicates in vehicle_summary on 3.08
   (SELECT vehicle_id
   , MAX(market_area) AS market_area
   FROM analytics.vehicle_summary
   GROUP BY vehicle_id) vs
  ON rs.vehicle_id=vs.vehicle_id
LEFT JOIN #top_5 t5
  ON vs.market_area = t5.market_area

JOIN hvh -- Only Power Hosts
  ON DATE_TRUNC('day',rs.trip_end_ts) = hvh.date
  AND rs.owner_id = hvh.owner_id

WHERE trip_end_ts IS NOT NULL
AND current_status NOT IN (2,11)
GROUP BY 1
ORDER BY 1;

-- All Active Hosts Monthly
SELECT DATE_TRUNC('month',trip_end_ts) AS month
, CASE WHEN t5.market_area IS NOT NULL THEN 'Top 5 Market' ELSE 'Other Market' END AS host_market_area_status
,COUNT(DISTINCT owner_id) AS num_active_owners
, COUNT(DISTINCT reservation_id) AS num_trips
, SUM(gross_revenue_usd) AS gross_revenue_usd
FROM analytics.reservation_summary rs
LEFT JOIN -- Issues with duplicates in vehicle_summary on 3.08
   (SELECT vehicle_id
   , MAX(market_area) AS market_area
   FROM analytics.vehicle_summary
   GROUP BY vehicle_id) vs
  ON rs.vehicle_id=vs.vehicle_id
LEFT JOIN #top_5 t5
  ON vs.market_area = t5.market_area
WHERE trip_end_ts IS NOT NULL
AND current_status NOT IN (2,11)
GROUP BY 1,2
ORDER BY 1,2


-----------------------------------------

----MONTHLY ACTIVES ----------

-----------------------------------------
SELECT 'Monthly Actives (#)' as metric
, DATE_TRUNC('month',last_day_month) AS month
, COUNT(DISTINCT driver_id) AS active_guests_trailing_1M
, COUNT(DISTINCT vehicle_id) AS active_vehicles_trailing_1M
, COUNT(DISTINCT owner_id) AS active_hosts_trailing_1M
FROM
(SELECT LAST_DAY(DATE_TRUNC('month', date)) AS last_day_month
FROM analytics.date
WHERE DATE_TRUNC('month',date) < DATE_TRUNC('month',CURRENT_DATE) -- Only Past Months
GROUP BY last_day_month) d
LEFT JOIN analytics.reservation_summary rs
ON DATE_TRUNC('month',rs.current_end_ts) BETWEEN d.last_day_month - INTERVAL '30 days' AND d.last_day_month
WHERE rs.current_status NOT IN (2,11)
    AND rs.trip_end_ts IS NOT NULL
GROUP BY month
HAVING DATE_TRUNC('month',last_day_month) >= '2012-01-01'
ORDER BY month ASC;


-----------------------------------------

----QUARTERLY ACTIVES ----------

-----------------------------------------

SELECT 'Monthly Actives (#)' as metric
, DATE_TRUNC('month',last_day_month) AS month
, COUNT(DISTINCT driver_id) AS active_guests_trailing_4M
, COUNT(DISTINCT vehicle_id) AS active_vehicles_trailing_4M
, COUNT(DISTINCT owner_id) AS active_hosts_trailing_4M
FROM
(SELECT LAST_DAY(DATE_TRUNC('month', date)) AS last_day_month
FROM analytics.date
WHERE DATE_TRUNC('month',date) < DATE_TRUNC('month',CURRENT_DATE) -- Only Past Months
GROUP BY last_day_month) d
LEFT JOIN analytics.reservation_summary rs
ON DATE_TRUNC('month',rs.current_end_ts) BETWEEN d.last_day_month - INTERVAL '120 days' AND d.last_day_month
WHERE rs.current_status NOT IN (2,11)
    AND rs.trip_end_ts IS NOT NULL
GROUP BY month
HAVING DATE_TRUNC('month',last_day_month) >= '2012-01-01'
ORDER BY month ASC;
